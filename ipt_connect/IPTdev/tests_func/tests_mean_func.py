from django.test import TestCase

from ..func_mean import *


# Create your tests here.


class Test(TestCase):
    def test_ttn_mean(self):

        input_data = [
            [],
            [1],
            [1, 2],
            [1, 2, 3],
            [1, 2, 3, 4],
            [1, 2, 3, 4, 5],
            [1, 2, 3, 4, 5, 6],
            [1, 2, 3, 4, 5, 6, 7],
            [1, 2, 3, 4, 5, 6, 7, 8],
            [1, 2, 3, 4, 5, 6, 7, 8, 9],
            [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
            [9, 9, 9, 9],
            [5, 5, 7, 7],
            [8, 9, 10, 10],
            [3, 4, 4],
            [3, 6, 6, 8],
            [5, 5, 9, 10],
            [8, 8, 8],
            [5, 5, 8, 8, 9],
            [4, 5, 6, 7, 9],
            [10, 10, 10, 10, 10],
            [2, 8, 8, 9, 9, 9],
            [4, 6, 8, 8, 10],
            [7, 8, 8, 8, 8],
            [4, 4, 6, 6, 6, 6],
            [3, 5, 5, 5, 6, 7, 7, 8],
            [2, 3, 4, 5, 5, 6, 6, 6],
            [1, 3, 4, 4, 5, 5, 5, 6],
            [3, 4, 6, 6, 7, 7, 7, 7, 7, 8, 9, 9],
            [5, 5, 5, 6, 7, 7, 7, 8, 8, 8, 8, 9],
            [5, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 9],
            [3, 3, 4, 5, 5, 6, 6, 6, 6, 6, 8, 9],
            [4, 4, 5, 5, 6, 6, 6, 7, 7, 7, 8, 8],
            [5, 5, 6, 6, 7, 7, 7, 7, 7, 8, 8, 9],
            [4, 6, 6, 7, 7, 8, 8, 9, 9, 9, 9, 9],
            [4, 5, 6, 6, 6, 6, 7, 7, 7, 7, 9, 9],
            [6, 6, 7, 7, 7, 7, 7, 7, 8, 8, 8, 10],
            [4, 4, 5, 6, 7, 8, 9, 9, 9, 9, 9, 10],
            [4, 4, 4, 5, 6, 6, 6, 6, 7, 7, 8, 8],
            [4, 4, 6, 6, 6, 7, 7, 7, 7, 8, 8, 9],
        ]
        res_data = [
            0.0,
            1.0,
            1.5,
            2.0,
            2.5,
            3.0,
            3.5,
            4.0,
            4.5,
            5.0,
            5.5,
            9.0,
            6.0,
            9.25,
            11.0 / 3,
            5.75,
            7.25,
            8.0,
            7.0,
            24.5 / 4,
            10.0,
            7.9,
            7.25,
            31.5 / 4,
            5.4,
            40.5 / 7,
            33.0 / 7,
            29.5 / 7,
            74.0 / 11,
            76.0 / 11,
            82.0 / 11,
            61.0 / 11,
            67.0 / 11,
            75.0 / 11,
            84.5 / 11,
            72.5 / 11,
            80.0 / 11,
            82.0 / 11,
            65.0 / 11,
            72.5 / 11,
        ]
        for inp, res in zip(input_data, res_data):
            self.assertEqual(ttn_mean(inp), res)

    def test_ipt_mean(self):

        input_data = [
            [],
            [1],
            [1, 2],
            [1, 2, 3],
            [1, 2, 3, 4],
            [1, 2, 3, 4, 5],
            [1, 2, 3, 4, 5, 6],
            [1, 2, 3, 4, 5, 6, 7],
            [1, 2, 3, 4, 5, 6, 7, 8],
            [1, 2, 3, 4, 5, 6, 7, 8, 9],
            [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
            [1, 2, 3],
            [2, 3, 3, 4],
            [0, 1, 1, 1, 1, 1],
            [3, 3, 3, 3, 3, 3, 3, 3, 3],
            [3, 5, 5, 6, 7, 7, 7],
            [0, 0],
            [0, 0, 0, 0, 0, 0],
            [6, 6, 6, 8, 8],
            [2, 3, 5, 5, 6],
            [1, 1, 1, 1, 1, 2],
            [5, 5, 6, 7, 7, 8],
            [5, 5, 5, 5, 7, 8],
            [4, 4, 4, 5, 5, 6],
            [6, 6, 7, 8, 8, 8],
            [5, 5, 7, 7, 8, 8],
            [5, 5, 6, 6, 7, 7],
            [7, 7, 7, 8, 8, 8],
            [5, 6, 6, 6, 6, 8],
            [7, 8, 9, 9, 10, 10],
            [5, 5, 6, 6, 7, 8, 8],
            [6, 7, 7, 7, 7, 8, 8],
            [6, 6, 7, 7, 7, 7],
            [6, 7, 8, 8, 9, 9],
            [4, 5, 6, 6, 7, 7, 7, 8, 8],
            [4, 5, 5, 6, 6, 6, 6, 7, 7],
            [4, 4, 5, 6, 6, 6, 6, 6, 7],
            [4, 4, 5, 6, 7, 7, 7, 7, 8],
            [5, 5, 6, 6, 7, 7, 8, 8, 8],
        ]
        res_data = [
            0.0,
            0.0,
            2.0,
            2.5,
            3.0,
            3.5,
            4.0,
            4.0,
            4.5,
            5.5,
            6.0,
            2.5,
            10.0 / 3.0,
            1.0,
            3.0,
            6.0,
            0.0,
            0.0,
            7.0,
            4.75,
            1.2,
            6.6,
            6.0,
            4.8,
            7.4,
            7.0,
            6.2,
            7.6,
            6.4,
            9.2,
            6.4,
            7.2,
            6.8,
            8.2,
            41.0 / 6,
            6.0,
            35.0 / 6,
            6.5,
            7.0,
        ]
        for inp, res in zip(input_data, res_data):
            self.assertEqual(ipt_mean(inp), res)

    def test_iypt_mean(self):

        input_data = [
            [],
            [1],
            [1, 2],
            [1, 2, 3],
            [1, 2, 3, 4],
            [1, 2, 3, 4, 5],
            [1, 2, 3, 4, 5, 6],
            [1, 2, 3, 4, 5, 6, 7],
            [1, 2, 3, 4, 5, 6, 7, 8],
            [1, 2, 3, 4, 5, 6, 7, 8, 9],
            [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
            [5, 5, 7, 7, 7],
            [6, 6, 6, 8, 8],
            [7, 7, 8, 8, 8],
            [6, 7, 8, 8, 8],
            [5, 6, 7, 7, 7],
            [5, 5, 6, 6, 6],
            [4, 6, 6, 7, 8],
            [5, 5, 6, 7, 8],
            [6, 6, 7, 7, 7],
            [5, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 8, 9, 9, 9, 9, 9, 9],
            [5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 9, 9],
            [7, 7, 7, 7, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 10, 10],
            [7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9],
            [7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 10],
            [7, 7, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 10],
            [6, 6, 6, 7, 7],
            [7, 7, 8, 8, 8],
            [8, 8, 9, 9, 10],
            [4, 5, 5, 5, 6],
            [6, 7, 7, 7, 8],
            [5, 5, 6, 6, 7],
            [4, 6, 6, 6, 7, 7],
            [3, 5, 5, 5, 5, 6],
            [4, 4, 4, 6, 6, 6],
        ]
        res_data = [
            0.0,
            1.0,
            1.5,
            2.0,
            2.5,
            3.0,
            3.5,
            4.0,
            4.5,
            5.0,
            5.5,
            6.25,
            6.75,
            30.5 / 4,
            7.50,
            6.50,
            22.5 / 4,
            6.25,
            24.5 / 4,
            26.5 / 4,
            126.0 / 17,
            120.0 / 17,
            142.5 / 17,
            138.0 / 17,
            143.5 / 17,
            143.5 / 17,
            25.5 / 4,
            30.5 / 4,
            8.75,
            5.00,
            7.00,
            5.75,
            6.10,
            4.90,
            5.00,
        ]
        for inp, res in zip(input_data, res_data):
            self.assertEqual(iypt_mean(inp), res)

    def test_mean(self):

        input_data = [
            [],
            [1],
            [1, 2],
            [1, 2, 3],
            [1, 2, 3, 4],
            [1, 2, 3, 4, 5],
            [1, 2, 3, 4, 5, 6],
            [1, 2, 3, 4, 5, 6, 7],
            [1, 2, 3, 4, 5, 6, 7, 8],
            [1, 2, 3, 4, 5, 6, 7, 8, 9],
            [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
            [6, 6, 6, 7, 7],
            [7, 7, 8, 8, 8],
            [8, 8, 9, 9, 10],
            [4, 5, 5, 5, 6],
            [6, 7, 7, 7, 8],
            [5, 5, 6, 6, 7],
            [4, 6, 6, 6, 7, 7],
            [3, 5, 5, 5, 5, 6],
            [4, 4, 4, 6, 6, 6],
            [5, 5, 6, 7, 7, 8],
            [5, 5, 5, 5, 7, 8],
        ]
        res_data = [
            0.0,
            1.0,
            1.5,
            2.0,
            2.5,
            3.0,
            3.5,
            4.0,
            4.5,
            5.0,
            5.5,
            6.4,
            7.6,
            8.8,
            5.0,
            7.0,
            5.8,
            6.0,
            29.0 / 6,
            5.0,
            38.0 / 6,
            35.0 / 6,
        ]
        for inp, res in zip(input_data, res_data):
            self.assertEqual(mean(inp), res)
